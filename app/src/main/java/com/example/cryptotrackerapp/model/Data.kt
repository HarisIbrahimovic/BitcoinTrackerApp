package com.example.cryptotrackerapp.model

import androidx.room.Entity
import androidx.room.Ignore
import androidx.room.PrimaryKey
@Entity(tableName = "data_table")
data class Data(
    val alt_rank: Int,
    val alt_rank_30d: Int,
    val alt_rank_30d_calc_24h_previous: Int,
    val alt_rank_calc_24h_previous: Int,
    val asset_id: Int,
    val average_sentiment: Double,
    val average_sentiment_calc_24h: Double,
    val average_sentiment_calc_24h_percent: Double,
    val average_sentiment_calc_24h_previous: Double,
    val close: Double,
    val correlation_rank: Double,
    val galaxy_score: Double,
    val high: Double,
    @PrimaryKey(autoGenerate = true)
    val id: Int,
    val low: Double,
    val market_cap: Long,
    val market_cap_global: Long,
    val market_cap_rank: Int,
    val market_dominance: Double,
    val max_supply: String,
    val medium: Int,
    val name: String,
    val news: Int,
    val news_calc_24h: Int,
    val news_calc_24h_percent: Double,
    val news_calc_24h_previous: Int,
    val `open`: Double,
    val percent_change_24h: Double,
    val percent_change_24h_rank: Int,
    val percent_change_30d: Double,
    val percent_change_7d: Double,
    val price: Double,
    val price_btc: Double,
    val price_score: Double,
    val reddit_comments: Int,
    val reddit_comments_score: Int,
    val reddit_posts: Int,
    val reddit_posts_score: Int,
    val sentiment_absolute: Int,
    val sentiment_relative: Int,
    val social_contributors: Int,
    val social_contributors_calc_24h: Int,
    val social_contributors_calc_24h_percent: Double,
    val social_contributors_calc_24h_previous: Int,
    val social_dominance: Double,
    val social_impact_score: Double,
    val social_score: Int,
    val social_score_24h_rank: Int,
    val social_score_calc_24h: Int,
    val social_score_calc_24h_percent: Double,
    val social_score_calc_24h_previous: Int,
    val social_volume: Int,
    val social_volume_24h_rank: Int,
    val social_volume_calc_24h: Int,
    val social_volume_calc_24h_percent: Double,
    val social_volume_calc_24h_previous: Int,
    val social_volume_global: Int,
    val symbol: String,
    val time: Int,

    val tweet_favorites: Int,
    val tweet_followers: Int,
    val tweet_quotes: Int,
    val tweet_replies: Int,
    val tweet_retweets: Int,
    val tweet_sentiment1: Int,
    val tweet_sentiment2: Int,
    val tweet_sentiment3: Int,
    val tweet_sentiment4: Int,
    val tweet_sentiment5: Int,
    val tweet_sentiment_impact1: Int,
    val tweet_sentiment_impact2: Int,
    val tweet_sentiment_impact3: Int,
    val tweet_sentiment_impact4: Int,
    val tweet_sentiment_impact5: Int,
    val tweet_spam: Int,
    val tweet_spam_calc_24h: Int,
    val tweet_spam_calc_24h_percent: Double,
    val tweet_spam_calc_24h_previous: Int,
    val tweets: Int,
    val unique_url_shares: Int,
    val url_shares: Int,
    val url_shares_calc_24h: Int,
    val url_shares_calc_24h_percent: Double,
    val url_shares_calc_24h_previous: Int,
    val volatility: Double,
    val volume: Double,
    val volume_24h: Double,
    val volume_24h_rank: Int,
    val youtube: Int
){
    @Ignore
    lateinit var timeSeries: List<TimeSery>
}